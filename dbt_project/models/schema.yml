version: 2
models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings.
    columns:
      - name: listing_id
        description: Primary key for the listings
        data_tests:
          - unique
          - not_null
      - name: host_id
        description: The host's id. References the host table.
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id
      - name: room_type
        description: Type of the apartment / room
        data_tests:
          - accepted_values:
              values:
                - Entire home/apt
                - Private room
                - Shared room
                - Hotel room
      - name: minimum_nights
        description: '{{ doc("dim_listing_cleansed__minimum_nights")}}'
        data_tests:
          - positive_value
  - name: dim_hosts_cleansed
    columns:
      - name: host_id
        data_type: number
        data_tests:
          - not_null
          - unique
      - name: host_name
        data_type: varchar
        data_tests:
          - not_null
      - name: is_superhost
        data_type: varchar
        data_tests:
          - accepted_values:
              values:
                - t
                - f
      # - name: dim_listings_w_hosts
      #   data_tests:
      #     # - dbt_expectations.expect_table_row_count_to_equal_other_table:
      #     #     compare_model: source('airbnb', 'listings')  # Correct way to specify the comparison table
      #   columns:
      #     - name: price
      #       data_tests:
      #         - dbt_expectations.expect_column_quantile_values_to_be_between:
      #             quantile: .99
      #             min_value: 50
      #             max_value: 500


      - name: dim_listings_w_hosts
        columns:
          - name: price
            data_tests:
              - dbt_expectations.expect_column_quantile_values_to_be_between:
                  quantile: 0.99
                  min_value: 50
                  max_value: 500
              - dbt_expectations.expect_column_max_to_be_between:
                  max_value: 500

      - name: created_at
        data_type: timestamp_ntz
      - name: updated_at
        data_type: timestamp_ntz
